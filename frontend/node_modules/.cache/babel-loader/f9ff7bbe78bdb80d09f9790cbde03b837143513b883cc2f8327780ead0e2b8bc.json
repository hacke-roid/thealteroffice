{"ast":null,"code":"import { FlattenedEncrypt } from '../flattened/encrypt.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n  constructor(enc, key, options) {\n    this.parent = enc;\n    this.key = key;\n    this.options = options;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this.unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this.unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  addRecipient(...args) {\n    return this.parent.addRecipient(...args);\n  }\n  encrypt(...args) {\n    return this.parent.encrypt(...args);\n  }\n  done() {\n    return this.parent;\n  }\n}\nexport class GeneralEncrypt {\n  constructor(plaintext) {\n    this._recipients = [];\n    this._plaintext = plaintext;\n  }\n  addRecipient(key, options) {\n    const recipient = new IndividualRecipient(this, key, {\n      crit: options?.crit\n    });\n    this._recipients.push(recipient);\n    return recipient;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setSharedUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = sharedUnprotectedHeader;\n    return this;\n  }\n  setAdditionalAuthenticatedData(aad) {\n    this._aad = aad;\n    return this;\n  }\n  async encrypt() {\n    if (!this._recipients.length) {\n      throw new JWEInvalid('at least one recipient must be added');\n    }\n    if (this._recipients.length === 1) {\n      const [recipient] = this._recipients;\n      const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, {\n        ...recipient.options\n      });\n      const jwe = {\n        ciphertext: flattened.ciphertext,\n        iv: flattened.iv,\n        recipients: [{}],\n        tag: flattened.tag\n      };\n      if (flattened.aad) jwe.aad = flattened.aad;\n      if (flattened.protected) jwe.protected = flattened.protected;\n      if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n      if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n      if (flattened.header) jwe.recipients[0].header = flattened.header;\n      return jwe;\n    }\n    let enc;\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n        throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n      }\n      const joseHeader = {\n        ...this._protectedHeader,\n        ...this._unprotectedHeader,\n        ...recipient.unprotectedHeader\n      };\n      const {\n        alg\n      } = joseHeader;\n      if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n      }\n      if (alg === 'dir' || alg === 'ECDH-ES') {\n        throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n      }\n      if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n        throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n      }\n      if (!enc) {\n        enc = joseHeader.enc;\n      } else if (enc !== joseHeader.enc) {\n        throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n      }\n      validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n      if (joseHeader.zip !== undefined) {\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n      }\n    }\n    const cek = generateCek(enc);\n    const jwe = {\n      ciphertext: '',\n      iv: '',\n      recipients: [],\n      tag: ''\n    };\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      const target = {};\n      jwe.recipients.push(target);\n      const joseHeader = {\n        ...this._protectedHeader,\n        ...this._unprotectedHeader,\n        ...recipient.unprotectedHeader\n      };\n      const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n      if (i === 0) {\n        const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n          p2c\n        }).encrypt(recipient.key, {\n          ...recipient.options,\n          [unprotected]: true\n        });\n        jwe.ciphertext = flattened.ciphertext;\n        jwe.iv = flattened.iv;\n        jwe.tag = flattened.tag;\n        if (flattened.aad) jwe.aad = flattened.aad;\n        if (flattened.protected) jwe.protected = flattened.protected;\n        if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n        target.encrypted_key = flattened.encrypted_key;\n        if (flattened.header) target.header = flattened.header;\n        continue;\n      }\n      const {\n        encryptedKey,\n        parameters\n      } = await encryptKeyManagement(recipient.unprotectedHeader?.alg || this._protectedHeader?.alg || this._unprotectedHeader?.alg, enc, recipient.key, cek, {\n        p2c\n      });\n      target.encrypted_key = base64url(encryptedKey);\n      if (recipient.unprotectedHeader || parameters) target.header = {\n        ...recipient.unprotectedHeader,\n        ...parameters\n      };\n    }\n    return jwe;\n  }\n}","map":{"version":3,"names":["FlattenedEncrypt","unprotected","JOSENotSupported","JWEInvalid","generateCek","isDisjoint","encryptKeyManagement","encode","base64url","validateCrit","IndividualRecipient","constructor","enc","key","options","parent","setUnprotectedHeader","unprotectedHeader","TypeError","addRecipient","args","encrypt","done","GeneralEncrypt","plaintext","_recipients","_plaintext","recipient","crit","push","setProtectedHeader","protectedHeader","_protectedHeader","setSharedUnprotectedHeader","sharedUnprotectedHeader","_unprotectedHeader","setAdditionalAuthenticatedData","aad","_aad","length","flattened","jwe","ciphertext","iv","recipients","tag","protected","encrypted_key","header","i","joseHeader","alg","Map","zip","undefined","cek","target","p2c","startsWith","setContentEncryptionKey","setKeyManagementParameters","encryptedKey","parameters"],"sources":["/home/kishan/TheAlterOffice/frontend/node_modules/jose/dist/browser/jwe/general/encrypt.js"],"sourcesContent":["import { FlattenedEncrypt } from '../flattened/encrypt.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options?.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt() {\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options });\n            const jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n            }\n        }\n        const cek = generateCek(enc);\n        const jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(recipient.unprotectedHeader?.alg ||\n                this._protectedHeader?.alg ||\n                this._unprotectedHeader?.alg, enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}