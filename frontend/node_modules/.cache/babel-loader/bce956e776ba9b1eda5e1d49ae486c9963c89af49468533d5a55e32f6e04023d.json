{"ast":null,"code":"var _jsxFileName = \"/home/kishan/NewBackEnd/frontend/src/App.jsx\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { decodeJwt } from 'jose';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [user, setUser] = useState(null);\n\n  const login = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: credentialResponse => {\n        console.log(credentialResponse);\n        const {\n          credential\n        } = credentialResponse;\n        const payload = credential ? decodeJwt(credential) : undefined;\n        if (payload) {\n          axios.get(`http://localhost:5000/api/auth/login`, {\n            headers: {\n              Authorization: `Bearer ${credential}`\n            }\n          });\n        }\n      },\n      onError: error => console.log(error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GoogleLogin","useState","React","decodeJwt","axios","jsxDEV","_jsxDEV","App","login","children","onSuccess","credentialResponse","console","log","credential","payload","undefined","get","headers","Authorization","onError","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kishan/NewBackEnd/frontend/src/App.jsx"],"sourcesContent":["import { GoogleLogin } from \"@react-oauth/google\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { decodeJwt} from 'jose'\nimport axios from \"axios\";\n\nfunction App() {\n  // const [user, setUser] = useState(null);\n\n\n  const login = () => {\n\n  }\n\n  return (\n    <div>\n      <GoogleLogin\n        onSuccess={(credentialResponse) => {\n          console.log(credentialResponse);\n          const { credential } = credentialResponse;\n          const payload = credential ? decodeJwt(credential) : undefined\n          if (payload) {\n            axios.get(`http://localhost:5000/api/auth/login`,{\n              headers: {\n                Authorization: `Bearer ${credential}`,\n              },\n            })\n          }\n        }}\n        onError={(error) => console.log(error)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAO,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACb;;EAGA,MAAMC,KAAK,GAAGA,CAAA,KAAM,CAEpB,CAAC;EAED,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA,CAACN,WAAW;MACVU,SAAS,EAAGC,kBAAkB,IAAK;QACjCC,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;QAC/B,MAAM;UAAEG;QAAW,CAAC,GAAGH,kBAAkB;QACzC,MAAMI,OAAO,GAAGD,UAAU,GAAGX,SAAS,CAACW,UAAU,CAAC,GAAGE,SAAS;QAC9D,IAAID,OAAO,EAAE;UACXX,KAAK,CAACa,GAAG,CAAC,sCAAsC,EAAC;YAC/CC,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUL,UAAU;YACrC;UACF,CAAC,CAAC;QACJ;MACF,CAAE;MACFM,OAAO,EAAGC,KAAK,IAAKT,OAAO,CAACC,GAAG,CAACQ,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA3BQnB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}