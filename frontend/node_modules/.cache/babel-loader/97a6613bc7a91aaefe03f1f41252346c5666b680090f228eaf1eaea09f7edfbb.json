{"ast":null,"code":"const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default str => {\n  const matched = REGEX.exec(str);\n  if (!matched || matched[4] && matched[1]) {\n    throw new TypeError('Invalid time period format');\n  }\n  const value = parseFloat(matched[2]);\n  const unit = matched[3].toLowerCase();\n  let numericDate;\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      numericDate = Math.round(value);\n      break;\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      numericDate = Math.round(value * minute);\n      break;\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      numericDate = Math.round(value * hour);\n      break;\n    case 'day':\n    case 'days':\n    case 'd':\n      numericDate = Math.round(value * day);\n      break;\n    case 'week':\n    case 'weeks':\n    case 'w':\n      numericDate = Math.round(value * week);\n      break;\n    default:\n      numericDate = Math.round(value * year);\n      break;\n  }\n  if (matched[1] === '-' || matched[4] === 'ago') {\n    return -numericDate;\n  }\n  return numericDate;\n};","map":{"version":3,"names":["minute","hour","day","week","year","REGEX","str","matched","exec","TypeError","value","parseFloat","unit","toLowerCase","numericDate","Math","round"],"sources":["/home/kishan/NewBackEnd/frontend/node_modules/jose/dist/browser/lib/secs.js"],"sourcesContent":["const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAE;AACjB,MAAMC,IAAI,GAAGD,MAAM,GAAG,EAAE;AACxB,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAE;AACrB,MAAME,IAAI,GAAGD,GAAG,GAAG,CAAC;AACpB,MAAME,IAAI,GAAGF,GAAG,GAAG,MAAM;AACzB,MAAMG,KAAK,GAAG,mIAAmI;AACjJ,eAAgBC,GAAG,IAAK;EACpB,MAAMC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAACF,GAAG,CAAC;EAC/B,IAAI,CAACC,OAAO,IAAKA,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAE,EAAE;IACxC,MAAM,IAAIE,SAAS,CAAC,4BAA4B,CAAC;EACrD;EACA,MAAMC,KAAK,GAAGC,UAAU,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMK,IAAI,GAAGL,OAAO,CAAC,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC;EACrC,IAAIC,WAAW;EACf,QAAQF,IAAI;IACR,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,GAAG;MACJE,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC;MAC/B;IACJ,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,GAAG;MACJI,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGV,MAAM,CAAC;MACxC;IACJ,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,IAAI;IACT,KAAK,KAAK;IACV,KAAK,GAAG;MACJc,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGT,IAAI,CAAC;MACtC;IACJ,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,GAAG;MACJa,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGR,GAAG,CAAC;MACrC;IACJ,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,GAAG;MACJY,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGP,IAAI,CAAC;MACtC;IACJ;MACIW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGN,IAAI,CAAC;MACtC;EACR;EACA,IAAIG,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;IAC5C,OAAO,CAACO,WAAW;EACvB;EACA,OAAOA,WAAW;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}