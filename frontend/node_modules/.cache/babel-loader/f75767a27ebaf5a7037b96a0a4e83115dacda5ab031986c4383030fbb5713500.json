{"ast":null,"code":"import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n  const size = buffers.reduce((acc, {\n    length\n  }) => acc + length, 0);\n  const buf = new Uint8Array(size);\n  let i = 0;\n  for (const buffer of buffers) {\n    buf.set(buffer, i);\n    i += buffer.length;\n  }\n  return buf;\n}\nexport function p2s(alg, p2sInput) {\n  return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n  if (value < 0 || value >= MAX_INT32) {\n    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n  }\n  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n  const high = Math.floor(value / MAX_INT32);\n  const low = value % MAX_INT32;\n  const buf = new Uint8Array(8);\n  writeUInt32BE(buf, high, 0);\n  writeUInt32BE(buf, low, 4);\n  return buf;\n}\nexport function uint32be(value) {\n  const buf = new Uint8Array(4);\n  writeUInt32BE(buf, value);\n  return buf;\n}\nexport function lengthAndInput(input) {\n  return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n  const iterations = Math.ceil((bits >> 3) / 32);\n  const res = new Uint8Array(iterations * 32);\n  for (let iter = 0; iter < iterations; iter++) {\n    const buf = new Uint8Array(4 + secret.length + value.length);\n    buf.set(uint32be(iter + 1));\n    buf.set(secret, 4);\n    buf.set(value, 4 + secret.length);\n    res.set(await digest('sha256', buf), iter * 32);\n  }\n  return res.slice(0, bits >> 3);\n}","map":{"version":3,"names":["digest","encoder","TextEncoder","decoder","TextDecoder","MAX_INT32","concat","buffers","size","reduce","acc","length","buf","Uint8Array","i","buffer","set","p2s","alg","p2sInput","encode","writeUInt32BE","value","offset","RangeError","uint64be","high","Math","floor","low","uint32be","lengthAndInput","input","concatKdf","secret","bits","iterations","ceil","res","iter","slice"],"sources":["/home/kishan/NewBackEnd/frontend/node_modules/jose/dist/browser/lib/buffer_utils.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}